// server/api/contact.post.ts
import { readBody, createError, sendError, defineEventHandler } from "h3";
import { useRuntimeConfig } from "#imports";
import { supabase } from '~/server/utils/supabase'

export default defineEventHandler(async (event) => {
  const { telegramBotToken, telegramChatId } = useRuntimeConfig().public;

  // —á–∏—Ç–∞–µ–º —Ç–µ–ª–æ
  const body = await readBody<{ text?: string }>(event);
  if (!body || typeof body.text !== "string" || !body.text.trim()) {
    // –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—è text ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–Ω—è—Ç–Ω—ã–π 400
    throw createError({
      statusCode: 400,
      statusMessage: "Bad Request: body.text is required",
    });
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
  const requestData = {
    type: body.text.includes('üõí') ? 'order' : 'contact',
    phone: body.text.match(/–¢–µ–ª–µ—Ñ–æ–Ω: (.*?)(?:\n|$)/)?.[1] || '',
    region: body.text.match(/–†–µ–≥–∏–æ–Ω: (.*?)(?:\n|$)/)?.[1] || '',
    type_building: body.text.match(/–¢–∏–ø –∑–¥–∞–Ω–∏—è: (.*?)(?:\n|$)/)?.[1] || '',
    fuel_type: body.text.match(/–í–∏–¥ —Ç–æ–ø–ª–∏–≤–∞: (.*?)(?:\n|$)/)?.[1] || '',
    power_type: body.text.match(/–¢–∏–ø –º–æ—â–Ω–æ—Å—Ç–∏: (.*?)(?:\n|$)/)?.[1] || '',
    raw_text: body.text,
    status: 'new'
  }

  const { error: dbError } = await supabase
    .from('requests')
    .insert([requestData])

  if (dbError) {
    console.error('Error saving request to database:', dbError)
    throw createError({
      statusCode: 500,
      statusMessage: 'Failed to save request to database'
    })
  }

  // —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ Telegram
  const url = `https://api.telegram.org/bot${telegramBotToken}/sendMessage`;
  const params = {
    chat_id: telegramChatId,
    text: body.text,
    parse_mode: "HTML",
  };

  try {
    const result = await $fetch(url, {
      method: "POST",
      body: params,
    });
    return { ok: true, result };
  } catch (err: any) {
    console.error("Telegram API error:", err);
    // –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ, —á—Ç–æ–±—ã Nuxt –≤–µ—Ä–Ω—É–ª 502 –∏–ª–∏ 500
    throw createError({
      statusCode: err.statusCode || 502,
      statusMessage: `Telegram API Error: ${err.message}`,
    });
  }
});
