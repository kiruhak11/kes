export default defineEventHandler(async (event) => {
  try {
    const body = await readBody(event);
    const { phone, userAgent, ip, page } = body;

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
    const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    const CHAT_ID = process.env.TELEGRAM_CHAT_ID;

    if (!BOT_TOKEN || !CHAT_ID) {
      console.error("Telegram bot configuration missing");
      return { success: false, error: "Bot not configured" };
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `üîî –ù–æ–≤—ã–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å –Ω–∞ —Å–∞–π—Ç–µ!

üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}
üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page || "–ì–ª–∞–≤–Ω–∞—è"}
üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${userAgent || "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"}
üåç IP: ${ip || "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString("ru-RU")}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const telegramUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;

    const response = await $fetch(telegramUrl, {
      method: "POST",
      body: {
        chat_id: CHAT_ID,
        text: message,
        parse_mode: "HTML",
      },
    });

    return { success: true, data: response };
  } catch (error) {
    console.error("Telegram notification error:", error);
    return { success: false, error: "Failed to send notification" };
  }
});
