export const usePositiveUX = () => {
  // –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
  const positiveMessages = {
    loading: [
      '‚ú® –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è –≤–∞—Å –ª—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã...',
      'üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...',
      'üí´ –°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ...',
      'üéØ –ò—â–µ–º –∏–¥–µ–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—Å...',
      '‚ö° –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏...',
    ],
    success: [
      'üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å—ë –≥–æ—Ç–æ–≤–æ!',
      '‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!',
      'üåü –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!',
      'üéä –ì–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É!',
    ],
    error: [
      'üòî –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–æ –º—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏–º!',
      'üîß –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã...',
      '‚ö° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É',
      'üõ†Ô∏è –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Ä–µ—à–µ–Ω–∏–µ–º!',
    ],
    empty: [
      'üîç –ó–¥–µ—Å—å –ø–æ–∫–∞ –ø—É—Å—Ç–æ, –Ω–æ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ!',
      'üì¶ –¢–æ–≤–∞—Ä—ã –≤ –ø—É—Ç–∏! –ó–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ',
      'üå± –†–∞–∑–¥–µ–ª —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏',
    ],
  };

  // –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  const getPositiveMessage = (type: keyof typeof positiveMessages) => {
    const messages = positiveMessages[type];
    return messages[Math.floor(Math.random() * messages.length)];
  };

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
  const showPositiveNotification = (message: string, type: 'success' | 'info' | 'warning' = 'info') => {
    if (process.client) {
      // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      const notification = document.createElement('div');
      notification.className = `positive-notification ${type}`;
      notification.innerHTML = `
        <div class="notification-content">
          <span class="notification-message">${message}</span>
          <button class="notification-close">&times;</button>
        </div>
      `;

      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
      notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        z-index: 10000;
        transform: translateX(400px);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        max-width: 350px;
        font-size: 0.9rem;
        line-height: 1.4;
      `;

      if (type === 'success') {
        notification.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
      } else if (type === 'warning') {
        notification.style.background = 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)';
      }

      document.body.appendChild(notification);

      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
      setTimeout(() => {
        notification.style.transform = 'translateX(0)';
      }, 100);

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
      const closeBtn = notification.querySelector('.notification-close');
      const closeNotification = () => {
        notification.style.transform = 'translateX(400px)';
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 400);
      };

      closeBtn?.addEventListener('click', closeNotification);

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(closeNotification, 5000);
    }
  };

  // –ê–Ω–∏–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
  const celebrateSuccess = (element?: HTMLElement) => {
    if (process.client) {
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ —ç—Ñ—Ñ–µ–∫—Ç
      const colors = ['#e31e24', '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4'];
      
      for (let i = 0; i < 20; i++) {
        setTimeout(() => {
          const confetti = document.createElement('div');
          confetti.style.cssText = `
            position: fixed;
            width: 10px;
            height: 10px;
            background: ${colors[Math.floor(Math.random() * colors.length)]};
            top: ${element ? element.getBoundingClientRect().top : 50}px;
            left: ${element ? element.getBoundingClientRect().left : window.innerWidth / 2}px;
            border-radius: 50%;
            pointer-events: none;
            z-index: 9999;
            animation: confettiFall 2s ease-out forwards;
          `;

          document.body.appendChild(confetti);

          setTimeout(() => {
            if (confetti.parentNode) {
              confetti.parentNode.removeChild(confetti);
            }
          }, 2000);
        }, i * 50);
      }

      // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
      if (!document.querySelector('#confetti-styles')) {
        const style = document.createElement('style');
        style.id = 'confetti-styles';
        style.textContent = `
          @keyframes confettiFall {
            0% {
              transform: translateY(0) rotate(0deg);
              opacity: 1;
            }
            100% {
              transform: translateY(200px) rotate(360deg);
              opacity: 0;
            }
          }
        `;
        document.head.appendChild(style);
      }
    }
  };

  // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞
  const animateListItems = (container: HTMLElement, delay = 100) => {
    if (process.client) {
      const items = container.querySelectorAll('.list-item, .product-card, .category-card');
      items.forEach((item, index) => {
        const element = item as HTMLElement;
        element.style.opacity = '0';
        element.style.transform = 'translateY(20px)';
        element.style.transition = 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)';

        setTimeout(() => {
          element.style.opacity = '1';
          element.style.transform = 'translateY(0)';
        }, index * delay);
      });
    }
  };

  return {
    getPositiveMessage,
    showPositiveNotification,
    celebrateSuccess,
    animateListItems,
  };
};