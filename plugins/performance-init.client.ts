export default defineNuxtPlugin(() => {
  if (process.client) {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–ø–µ—Ä-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–∞–π—Ç–∞...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–∑–∞–±–ª—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const { startMonitoring } = usePerformanceMonitor();
    const { triggerCleanup } = useMemoryOptimization();
    const { injectCriticalCSS } = useCriticalCSS();
    const { optimizedFetch, preloadData } = useAPIOptimization();

    // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ - –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    const initCriticalOptimizations = () => {
      // –ò–Ω–∂–µ–∫—Ç–∏–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π CSS
      injectCriticalCSS();
      
      // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
      preloadData([
        '/api/categories',
        '/api/products/featured',
      ]);
      
      // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º viewport –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
      if (window.innerWidth < 768) {
        document.documentElement.classList.add('mobile-optimized');
      }
      
      // –û—Ç–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–∞ —Å–ª–∞–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
      if (navigator.hardwareConcurrency && navigator.hardwareConcurrency < 4) {
        document.documentElement.classList.add('low-performance');
      }
    };

    // –ù–µ–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ - –≤—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏ idle
    const initNonCriticalOptimizations = () => {
      // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      startMonitoring();
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É –ø–∞–º—è—Ç–∏
      setInterval(triggerCleanup, 300000); // –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
      
      // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const images = document.querySelectorAll('img[loading="lazy"]');
      images.forEach((img) => {
        img.setAttribute('decoding', 'async');
      });
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ hover
      document.addEventListener('mouseover', (e) => {
        const link = (e.target as HTMLElement).closest('a[href^="/"]') as HTMLAnchorElement;
        if (link && !link.dataset.preloaded) {
          link.dataset.preloaded = 'true';
          const prefetchLink = document.createElement('link');
          prefetchLink.rel = 'prefetch';
          prefetchLink.href = link.href;
          document.head.appendChild(prefetchLink);
        }
      }, { passive: true });
    };

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    initCriticalOptimizations();
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–µ–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ idle
    if ('requestIdleCallback' in window) {
      requestIdleCallback(initNonCriticalOptimizations, { timeout: 2000 });
    } else {
      setTimeout(initNonCriticalOptimizations, 100);
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    console.log('‚úÖ –í—Å–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã! –°–∞–π—Ç –≥–æ—Ç–æ–≤ –∫ –ø–æ–ª–µ—Ç—É! üöÄ');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      const paintEntries = performance.getEntriesByType('paint');
      const fcp = paintEntries.find(entry => entry.name === 'first-contentful-paint');
      if (fcp) {
        console.log(`üé® First Contentful Paint: ${fcp.startTime.toFixed(2)}ms`);
      }
      
      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;
      if (navigation) {
        const domReady = navigation.domContentLoadedEventEnd - navigation.navigationStart;
        console.log(`üìÑ DOM Ready: ${domReady.toFixed(2)}ms`);
      }
    }, 3000);
  }
});